{"version":3,"sources":["main/components/Footer/index.js","main/components/Card/index.js","main/pages/PMain/index.js","main/pages/PLogin/index.js","main/routers/index.js","main/layout/index.js","serviceWorker.js","index.js","App.js","main/images/les.jpg"],"names":["Footer","className","type","placeholder","Card","item","title","startDate","endDate","sity","src","ImageCard","Icon","name","PMain","useState","cards","setCards","suggestionDirections","setSuggestionDirections","directions","valueDirection","setValueDirection","suggestionCountries","setSuggestionCountries","countries","valueCountries","setValueCountries","useEffect","renderCards","link","a","axios","post","data","map","index","key","value","onChange","e","suggestions","completeMethod","event","results","filter","direction","toLowerCase","startsWith","query","dropdown","country","PLogin","email","setEmail","password","setPassword","save","res","console","log","target","onClick","class","Content","path","Layout","pathname","useLocation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c62c11df.chunk.js","sourcesContent":["import React from 'react'\n\nimport './index.css'\n\nexport default function Footer() {\n  return (\n    <div className='footer column'>\n      <p className='text-footer'>ХОЧЕШ ДIЗНАВАТИСЯ ПРО НОВI МОЖЛИВОСТI ПЕРШИМ?</p>\n      <div className=\"ui inverted input div-subscribe-email\">\n        <input className='input-subscribe-email' type=\"text\" placeholder=\"Search...\" />\n      </div>\n      <button className=\"medium ui button subscribe margin\">пiдписатися!</button>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Card as ReactCard, Icon } from 'semantic-ui-react'\nimport ImageCard from '../../images/les.jpg'\nimport './index.css'\n\nfunction Card({item}) {\n  const {\n    title,\n    startDate,\n    endDate,\n    sity\n  } = item\n\n  return (\n    <div className='c-card-root'>\n      <div className='c-card-top'>\n        <img className='c-image' src={ImageCard} />\n      </div>\n      <div className='c-card-buttom'>\n        <p className='c-card-title'>{title}</p>\n        <div className='c-card-dates'>\n          <div className='c-card-date-start'>\n            <Icon name='calendar alternate outline' />\n            <p className='c-start-data'>Тэзы до {startDate}</p>\n          </div>\n          <div className='c-card-date-end'>\n            <Icon name='calendar alternate outline' />\n            <p className='c-end-data'>Начало {endDate}</p>\n          </div>\n        </div>\n        <div className='c-card-sity'>\n          <Icon name='map marker alternate' />\n          <p>{sity}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React, { useState, useEffect } from 'react'\nimport { Card, InputSearch } from '../../components'\nimport {AutoComplete} from 'primereact/autocomplete'\nimport axios from 'axios'\n\nimport './index.css'\n\nexport default function PMain() {\n  const [cards, setCards] = useState([])\n \n  const [suggestionDirections, setSuggestionDirections] = useState(null)\n  const [directions, setDirections] = useState([\n    'Экономические',\n    'Технические',\n    'Медицинские',\n    'Социологические',\n    'Педагогические',\n    'Филологические',\n    'Биологические',\n    'Культурология',\n    'Физико-математические',\n    'Исторические-и-археология',\n    'Юридические',\n    'Психологические',\n    'Философские',\n    'Химические',\n    'Политология',\n    'Компьютерные',\n    'Искусствоведение',\n    'Экология',\n    'Географические',\n    'Геолого-минералогические',\n    'Сельскохозяйственные',\n    'Науки-о-Земле',\n    'Нанотехнологии',\n    'Фармацевтические',\n    'Архитектура',\n    'Ветеринарные',\n    'Междисциплинарные'\n  ])\n  const [valueDirection, setValueDirection] = useState('')\n  const filterDirections = (event) => {\n    let results = directions.filter((direction) => {\n      return direction.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    setSuggestionDirections(results)\n  }\n\n  // COUNTRIES\n  const [suggestionCountries, setSuggestionCountries] = useState(null)\n  const [countries, setCountries] = useState([\n    'Russian-Federation',\n    'Ukraine',\n    'USA',\n    'United-Kingdom',\n    'China',\n    'Germany',\n    'Italy',\n    'Spain',\n    'France',\n    'Japan',\n    'Canada',\n    'Malaysia',\n    'India',\n    'Turkey',\n    'Greece',\n    'Belarus',\n    'Poland',\n    'Czech-Republic',\n    'Australia',\n    'Thailand',\n    'Un.-Arab-Emir.',\n    'Austria',\n    'Netherlands',\n    'Singapore',\n    'Portugal',\n    'Indonesia',\n    'Switzerland',\n    'Ireland',\n  ])\n  const [valueCountries, setValueCountries] = useState('')\n  const filterCountries = (event) => {\n    let results = countries.filter((country) => {\n      return country.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    setSuggestionCountries(results)\n  }\n\n\n  useEffect(() => {\n    renderCards('')\n  }, [])\n\n  useEffect(() => {\n    if (!!valueDirection && !valueCountries) {\n      renderCards('/0/0/' + valueDirection)\n    }\n    if(!valueDirection && !!valueCountries) {\n      renderCards('/' + valueCountries)\n    }\n    if(!!valueDirection && !!valueCountries) {\n      renderCards('/' + valueCountries + '/0/' + valueDirection)\n    }\n  }, [valueDirection, valueCountries])\n\n\n  const renderCards = async (link) => {\n    let {data = {cards: []}} = await axios.post('/api/get-cards', {data: {link}})\n\n    setCards(data.cards.map((item, index) => {\n      return (<Card item={item} key={index} />)\n      })\n    )\n  }\n\n\n  return (\n    <div className='p-main'>\n      <div className='p-sort-data'>\n        <div className='p-c-autocomplete'>\n          <h3>Отрасль</h3>\n          <AutoComplete\n            className='c-input-autocomplete'\n            value={valueDirection}\n            onChange={(e) => setValueDirection(e.value)}\n            suggestions={suggestionDirections}\n            completeMethod={filterDirections} \n            dropdown={true} \n          />\n        </div>\n        <div className='p-c-autocomplete'>\n          <h3>Страна</h3>\n          <AutoComplete\n            className='c-input-autocomplete'\n            value={valueCountries}\n            onChange={(e) => setValueCountries(e.value)}\n            suggestions={suggestionCountries}\n            completeMethod={filterCountries} \n            dropdown={true} \n          />\n        </div>\n        {/* <div className='p-c-autocomplete'>\n          <h3>Месяц</h3>\n          <AutoComplete\n            value={lesik}\n            onChange={(e) => setLesik(e.value)}\n            suggestions={brandSuggestions}\n            completeMethod={suggestBrands} \n            dropdown={true} \n          />\n        </div> */}\n      </div>\n      <div className='p-main-content'>\n        {cards}\n      </div>\n    </div>\n  );\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\n\nimport './index.css'\n\nexport default function PLogin() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const save = async () => {\n    const data = {\n      email,\n      password\n    }\n    let res = await axios.post(`https://volonteryou-backend.herokuapp.com/login?email=${email}&password=${password}`, data)\n\n    console.log(res)\n  }\n  return (\n    <div className='pLogin'>\n      <div className='formLogin'>\n        <p className='login label white'>ВХІД</p>\n        <div className='ui inverted input margin'>\n          <input type='text' placeholder='Search...' value={email} onChange={e => setEmail(e.target.value)}/>\n        </div>\n        <div className='ui inverted input margin'>\n          <input type='text' placeholder='Search...' value={password} onChange={e => setPassword(e.target.value)}/>\n        </div>\n        <button className='massive ui button margin'  onClick={save}>\n          <p className='label black'>УВІЙТИ</p>\n        </button>\n        <div className='row margin'>\n          <p className='text black'>ЩЕ НЕ ЗАРЕЄCТРУВАВСЯ?</p>\n          <button class='medium ui button'>\n            <p className='text yellow'>ЗАРЕЄСТРУВАТИСЯ</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\"\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport {\n  PLogin,\n  PMain\n} from '../pages'\n\n\nexport default function Content() {\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        <PLogin />\n      </Route>\n      <Route path=\"/\">\n        <PMain />\n      </Route>\n    </Switch>\n  );\n}","import React from \"react\"\nimport {\n  Link,\n  useLocation\n} from \"react-router-dom\"\nimport Content from '../routers'\nimport {Header, Footer} from '../components'\n\nimport './index.css'\n\nexport default function Layout() {\n  const { pathname } = useLocation()\n\n  return (\n    <div className='layout'>      \n      {/* <Header /> */}\n      <div className='content'>\n        <Content />\n      </div>\n      {(pathname !== '/login') && (<Footer />)}\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport {\n  BrowserRouter,\n} from 'react-router-dom';\nimport Layout from './main/layout'\n\nimport 'semantic-ui-css/semantic.min.css'\n\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\n\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Layout />\n    </BrowserRouter>\n  );\n}","module.exports = __webpack_public_path__ + \"static/media/les.0cc0cdae.jpg\";"],"sourceRoot":""}